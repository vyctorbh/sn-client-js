"use strict";
/**
 *
 * @module Enums
 *
 * @preferred
 *
 * @description Module for enums types defined in SenseNet helps you to use enums with dot notation.
 *
 * This module is autogenerated from Sense/Net metadata (/Odata/$metadata)
 *
 * ```
 * let car = new ContentTypes.Car({
 *  Id: 1,
 *  Name: 'MyCar',
 *  DisplayName: 'My Car',
 *  Style: Enum.Style.Cabrio
 * });
 * ```
 */ /** */
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:naming-convention
var VersioningMode;
(function (VersioningMode) {
    VersioningMode["Option0"] = "0";
    VersioningMode["Option1"] = "1";
    VersioningMode["Option2"] = "2";
    VersioningMode["Option3"] = "3";
})(VersioningMode = exports.VersioningMode || (exports.VersioningMode = {}));
var InheritableVersioningMode;
(function (InheritableVersioningMode) {
    InheritableVersioningMode["Option0"] = "0";
    InheritableVersioningMode["Option1"] = "1";
    InheritableVersioningMode["Option2"] = "2";
    InheritableVersioningMode["Option3"] = "3";
})(InheritableVersioningMode = exports.InheritableVersioningMode || (exports.InheritableVersioningMode = {}));
var ApprovingMode;
(function (ApprovingMode) {
    ApprovingMode["Option0"] = "0";
    ApprovingMode["Option1"] = "1";
    ApprovingMode["Option2"] = "2";
})(ApprovingMode = exports.ApprovingMode || (exports.ApprovingMode = {}));
var InheritableApprovingMode;
(function (InheritableApprovingMode) {
    InheritableApprovingMode["Option0"] = "0";
    InheritableApprovingMode["Option1"] = "1";
    InheritableApprovingMode["Option2"] = "2";
})(InheritableApprovingMode = exports.InheritableApprovingMode || (exports.InheritableApprovingMode = {}));
var SavingState;
(function (SavingState) {
    SavingState["Finalized"] = "0";
    SavingState["Creating"] = "1";
    SavingState["Modifying"] = "2";
    SavingState["ModifyingLocked"] = "3";
})(SavingState = exports.SavingState || (exports.SavingState = {}));
var GroupAttachments;
(function (GroupAttachments) {
    GroupAttachments["email"] = "email";
    GroupAttachments["root"] = "root";
    GroupAttachments["subject"] = "subject";
    GroupAttachments["sender"] = "sender";
})(GroupAttachments = exports.GroupAttachments || (exports.GroupAttachments = {}));
var EnableAutofilters;
(function (EnableAutofilters) {
    EnableAutofilters["Default"] = "0";
    EnableAutofilters["Enabled"] = "1";
    EnableAutofilters["Disabled"] = "2";
})(EnableAutofilters = exports.EnableAutofilters || (exports.EnableAutofilters = {}));
var EnableLifespanFilter;
(function (EnableLifespanFilter) {
    EnableLifespanFilter["Default"] = "0";
    EnableLifespanFilter["Enabled"] = "1";
    EnableLifespanFilter["Disabled"] = "2";
})(EnableLifespanFilter = exports.EnableLifespanFilter || (exports.EnableLifespanFilter = {}));
var Language;
(function (Language) {
    Language["En"] = "en";
    Language["Hu"] = "hu";
})(Language = exports.Language || (exports.Language = {}));
var MemoType;
(function (MemoType) {
    MemoType["generic"] = "generic";
    MemoType["iso"] = "iso";
    MemoType["iaudit"] = "iaudit";
})(MemoType = exports.MemoType || (exports.MemoType = {}));
var Priority;
(function (Priority) {
    Priority["Option0"] = "1";
    Priority["Option1"] = "2";
    Priority["Option2"] = "3";
})(Priority = exports.Priority || (exports.Priority = {}));
var Status;
(function (Status) {
    Status["pending"] = "pending";
    Status["active"] = "active";
    Status["completed"] = "completed";
    Status["deferred"] = "deferred";
    Status["waiting"] = "waiting";
})(Status = exports.Status || (exports.Status = {}));
var QueryType;
(function (QueryType) {
    QueryType["Public"] = "Public";
    QueryType["Private"] = "Private";
})(QueryType = exports.QueryType || (exports.QueryType = {}));
var Gender;
(function (Gender) {
    Gender["Option0"] = "...";
    Gender["Female"] = "Female";
    Gender["Male"] = "Male";
})(Gender = exports.Gender || (exports.Gender = {}));
var MaritalStatus;
(function (MaritalStatus) {
    MaritalStatus["Option0"] = "...";
    MaritalStatus["Single"] = "Single";
    MaritalStatus["Married"] = "Married";
})(MaritalStatus = exports.MaritalStatus || (exports.MaritalStatus = {}));
//# sourceMappingURL=Enums.js.map